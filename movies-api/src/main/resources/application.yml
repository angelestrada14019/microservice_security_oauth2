spring:
  application:
    name: movies-service
  data:
    mongodb:
      uri: mongodb://localhost:27017/moviesdb
      password: admin
      username: admin
  main:
    allow-circular-references: true
  security:
    oauth2:
      client:
        provider:
          keycloak-provider:
            issuer-uri: http://localhost:8085/realms/DigitalMedia
        registration:
          api-gateway-service:
            provider: keycloak-provider
            client-id: microservicios
            client-secret: nt2kiG6XXxtrVSRUWSH14eagW5J5ZQIv
            authorization-grant-type: authorization_code
            redirect-uri: 'http://localhost:8080/login/oauth2/code/keycloak'


app:
  cors:
    allowed-origins: http://localhost:3000

management:
  endpoints:
    web:
      exposure.include: beans, env, health, info, metrics, mappings
  endpoint:
    health:
      show-details: always

springdoc:
  show-actuator: true
  swagger-ui:
    groups-order: DESC
    disable-swagger-default-url: true
server:
  port: 8089

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    enabled: true
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}



property:
  keycloak:
    jwt:
      cert:
        uri: ${spring.security.oauth2.client.provider.keycloak-provider.issuer-uri}/protocol/openid-connect/certs